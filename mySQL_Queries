#Query for TUTOR LIST requirement
#Query to select all the tuples with the matching tutor name or subject
#Parameters: Name parameter (name of tutor searching for), Subject parameter (name of subject searching for)

SELECT Tutor.name
FROM Tutor
WHERE Tutor.name LIKE '%name parameter%'
  OR EXISTS (
    SELECT 1
    FROM Subject_List
    WHERE Subject_List.subject LIKE CONCAT('%', subject, '%') AND subject = 'subject parameter'
  );

#############################################

#Queries for USER FAVORITE LIST requirement

#Query to insert a new tutor to the user's favorite list
#Parameters: Tutor Name, User Name
INSERT INTO User_Favorites (T_Username, U_Username)
VALUES ("Tutor Username Parameter" , "User Username Parameter");

#Query to display all tutors on a User's favorite list
#Parameters: User Name
Select T_Username
FROM User_Favorites
WHERE U_Username = "User Username Parameter";

#Query to Delete a tutor from a User's favorite list
#Parameters: Tutor Name, User Name
DELETE FROM User_Favorites
WHERE T_Username = "Tutor Username Parameter";

##################################################

#Queries for printing out total hours tutored requirement

#Query to print out the total hours tutored for all users
#Parameters: none
SELECT U_Username, sec_to_time(SUM((time_to_sec(End_Time) - time_to_sec(Start_Time)))) AS Total_Hours_Tutored
FROM Appointment_List
WHERE str_to_date(Date, '%m/%d/%Y') < NOW()
GROUP BY U_Username;

#Query to print out the total hours tutored for all tutors
#Parameters: none
SELECT T_Username, sec_to_time(SUM((time_to_sec(End_Time) - time_to_sec(Start_Time)))) AS Total_Hours_Tutored
FROM Appointment_List
WHERE str_to_date(Date, '%m/%d/%Y') < NOW()
GROUP BY T_Username;

########################################################

#Next Query goes Here:

